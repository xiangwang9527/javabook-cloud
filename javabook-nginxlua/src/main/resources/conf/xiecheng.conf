server {

    listen 80;
    server_name _;

    location /xiecheng {
        default_type 'text/html';
        content_by_lua '
            co = coroutine.create(function (a, b)
            ngx.print("resume args : "..a..", "..b.." - ")
            yreturn = coroutine.yield()
            ngx.print ("yreturn : "..yreturn.." - ")
        end)
        ngx.print(coroutine.resume(co, 1, 2), "<br/>")
        ngx.print(coroutine.resume(co, 3, 4), "<br/>")
        ngx.print(coroutine.resume(co, 5, 6))
          ';
     }

    location /xiecheng2 {
        default_type 'text/html';
        content_by_lua '
            co = coroutine.wrap(function (a, b)
                ngx.print("resume args : "..a..", "..b.." - ")
                yreturn = coroutine.yield()
                ngx.print ("yreturn : "..yreturn.." - ")
            end)
            ngx.print("co type is : "..ngx.print(type(co)), "<br/>")
            ngx.print(ngx.print(co(1, 2)), "<br/>")
            ngx.print(ngx.print(co(3, 4)))
          ';
     }

    location /xiecheng3 {
        default_type 'text/html';
        content_by_lua '
            function status(a)
                ngx.print(a.." - r1 status : "..coroutine.status(r1)..", r2 status : "..coroutine.status(r2), "<br/>")
            end

            r1 = coroutine.create(function(a)
                ngx.print("r1 arg is : "..a, "<br/>")
                status(2)
                local rey = coroutine.yield("r1")
                ngx.print("yeild r1 return is " .. rey, "<br/>")
                status(4)
                ngx.print("point 1<br/>")
                coroutine.yield("b")
                ngx.print("point 2<br/>")
            end)

            r2 = coroutine.create(function(a, b)
                ngx.print("r2 arg is : "..a..", "..b, "<br/>")
                status(1)
                local stat, res1 = coroutine.resume(r1, 1)
                ngx.print("resume r1 return is : "..res1, "<br/>")
                status(3)
                local stat2, res2 = coroutine.resume(r1, 2)
                ngx.print("resume r1 again return is : "..res2, "<br/>")
                status(31)
                local stat3, res3 = coroutine.resume(r1, 3)
                ngx.print("resume r1 again2 return is : "..res3, "<br/>")
                local arg = coroutine.yield("r2")
            end)

            stat, mainre = coroutine.resume(r2, 1, 2)
            status(5)
            ngx.print("last return is "..mainre, "<br/>")
          ';
     }
}
